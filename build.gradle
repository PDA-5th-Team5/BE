plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.5'
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/release' }
    maven { url 'https://repo.spring.io/milestone' }
}

// ✅ 루트 프로젝트는 실행되지 않고, 설정만 제공하는 역할
// 하위 모듈에만 공통 설정 적용
subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    group = 'com.pda'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/release' }
        maven { url 'https://repo.spring.io/milestone' }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.0"
        }
    }

    dependencies {
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

// ✅ API Gateway 모듈
project(':api-gateway') {
    dependencies {
        implementation project(':util-service')
        implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    }
}

// ✅ Eureka Server 모듈
project(':eureka-server') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation project(':util-service')
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    }
}

// ✅ User Service 모듈
project(':user-service') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation project(':util-service')
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-mail'
        implementation 'mysql:mysql-connector-java:8.0.33'
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

        // OAuth2 + Refresh Token
        implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
        implementation 'org.springframework.security:spring-security-oauth2-jose'
    }
}

// ✅ Stock Service 모듈
project(':stock-service') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation project(':util-service')
        implementation 'mysql:mysql-connector-java:8.0.33'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    }
}

// ✅ portfolio Service 모듈
project(':portfolio-service') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation project(':util-service')
        implementation 'mysql:mysql-connector-java:8.0.33'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    }
}

// ✅ Util Service 모듈 (라이브러리 역할, 실행되지 않음)
project(':util-service') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'com.fasterxml.jackson.core:jackson-databind'
        implementation 'org.apache.commons:commons-lang3'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        'org.springframework.boot:spring-boot-starter-data-jpa'
    }

    bootJar {
        enabled = false  // 실행 가능한 JAR 생성하지 않음
    }

    jar {
        enabled = true
        archiveBaseName = 'util-service'
    }
}